openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: ""
  description: Generated server url
paths:
  /api/restaurant/table/{restaurantRef}/{tableRef}:
    get:
      tags:
      - restaurant-table-controller
      operationId: getTable
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: tableRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantTableGet'
    put:
      tags:
      - restaurant-table-controller
      operationId: putTable
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: tableRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantTableData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantTableGet'
    delete:
      tags:
      - restaurant-table-controller
      operationId: deleteTable
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: tableRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /api/restaurant/details/{restaurantRef}:
    put:
      tags:
      - restaurant-controller
      operationId: putRestaurant
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantGet'
    delete:
      tags:
      - restaurant-controller
      operationId: deleteRestaurant
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /api/order-instance/{restaurant}/{ref}:
    get:
      tags:
      - order-instance-controller
      operationId: getOrder
      parameters:
      - name: restaurant
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsGet'
    put:
      tags:
      - order-instance-controller
      operationId: order
      parameters:
      - name: restaurant
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPutData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsGet'
    delete:
      tags:
      - order-instance-controller
      operationId: deleteOrder
      parameters:
      - name: restaurant
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /api/order-element/{restaurantRef}/{ref}:
    put:
      tags:
      - order-element-controller
      operationId: putElement
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderElementData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderElementGet'
  /api/menu/topping/{restaurantRef}/{ref}:
    get:
      tags:
      - menu-item-topping-controller
      operationId: getTopping
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemToppingGet'
    put:
      tags:
      - menu-item-topping-controller
      operationId: putTopping
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemToppingData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemToppingGet'
    delete:
      tags:
      - menu-item-topping-controller
      operationId: deleteTopping
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /api/menu/topping-collection/{restaurantRef}/{ref}:
    get:
      tags:
      - menu-item-topping-collection-controller
      operationId: getToppingCollection
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemToppingCollectionGet'
    put:
      tags:
      - menu-item-topping-collection-controller
      operationId: putToppingCollection
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemToppingCollectionData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemToppingCollectionGet'
    delete:
      tags:
      - menu-item-topping-collection-controller
      operationId: deleteToppingCollection
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /api/menu/select/{restaurantRef}/{ref}:
    get:
      tags:
      - menu-item-select-controller
      operationId: getSelect
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemSelectGet'
    put:
      tags:
      - menu-item-select-controller
      operationId: putSelect
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemSelectData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemSelectGet'
    delete:
      tags:
      - menu-item-select-controller
      operationId: deleteSelect
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /api/menu/select-collection/{restaurantRef}/{ref}:
    get:
      tags:
      - menu-item-select-collection-controller
      operationId: getSelectCollection
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemSelectCollectionGet'
    put:
      tags:
      - menu-item-select-collection-controller
      operationId: putSelectCollection
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemSelectCollectionData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemSelectCollectionGet'
    delete:
      tags:
      - menu-item-select-collection-controller
      operationId: deleteSelectCollection
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /api/menu/item/{restaurantRef}/{itemRef}:
    put:
      tags:
      - menu-item-controller
      operationId: putItem
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: itemRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemDetailedGet'
    delete:
      tags:
      - menu-item-controller
      operationId: deleteItem
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: itemRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /api/menu/item-group/{restaurantRef}/{menuItemGroupRef}:
    put:
      tags:
      - menu-item-group-controller
      operationId: putItemGroup
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: menuItemGroupRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemGroupData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemGroupGet'
    delete:
      tags:
      - menu-item-group-controller
      operationId: deleteMenuItemGroup
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: menuItemGroupRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /api/menu/category/{restaurantRef}/{categoryRef}:
    get:
      tags:
      - menu-category-controller
      operationId: getCategory
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: categoryRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuCategoryGet'
    put:
      tags:
      - menu-category-controller
      operationId: putCategory
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: categoryRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuCategoryData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuCategoryGet'
    delete:
      tags:
      - menu-category-controller
      operationId: deleteCategory
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: categoryRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /api/restaurant/table/{restaurantRef}:
    post:
      tags:
      - restaurant-table-controller
      operationId: postTable
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantTableData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantTableGet'
  /api/restaurant/details/:
    post:
      tags:
      - restaurant-controller
      operationId: postRestaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantGet'
  /api/order-element/{restaurantRef}:
    post:
      tags:
      - order-element-controller
      operationId: postElement
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderElementData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderElementGet'
  /api/multimedia/{restaurantRef}:
    post:
      tags:
      - upload-multimedia-controller
      operationId: postMultimedia
      parameters:
      - name: type
        in: query
        required: true
        schema:
          type: string
          enum:
          - IMAGE_PNG
          - IMAGE_JPEG
          - FILE_TXT
          - IMAGE_SVG
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MultimediaGet'
  /api/menu/topping/{restaurantRef}:
    post:
      tags:
      - menu-item-topping-controller
      operationId: postTopping
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemToppingData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemToppingGet'
  /api/menu/topping-collection/{restaurantRef}:
    post:
      tags:
      - menu-item-topping-collection-controller
      operationId: postToppingCollection
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemToppingCollectionData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemToppingCollectionGet'
  /api/menu/select/{restaurantRef}:
    post:
      tags:
      - menu-item-select-controller
      operationId: postSelect
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemSelectData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemSelectGet'
  /api/menu/select-collection/{restaurantRef}:
    post:
      tags:
      - menu-item-select-collection-controller
      operationId: postSelectCollection
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemSelectCollectionData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemSelectCollectionGet'
  /api/menu/item/{restaurantRef}:
    post:
      tags:
      - menu-item-controller
      operationId: postItem
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemDetailedGet'
  /api/menu/item-group/{restaurantRef}:
    post:
      tags:
      - menu-item-group-controller
      operationId: postItemGroup
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemGroupData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemGroupGet'
  /api/menu/category/{restaurantRef}:
    get:
      tags:
      - menu-category-controller
      operationId: getCategories_1
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuCategoryGet'
    post:
      tags:
      - menu-category-controller
      operationId: postCategory
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuCategoryData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuCategoryGet'
  /api/do/order/{restaurant}:
    post:
      tags:
      - do-order-controller
      operationId: order_1
      parameters:
      - name: restaurant
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsGet'
  /api/restaurant/details/{restaurant}:
    get:
      tags:
      - restaurant-controller
      operationId: getRestaurant
      parameters:
      - name: restaurant
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantGet'
  /api/order-element/{restaurant}/{ref}:
    get:
      tags:
      - order-element-controller
      operationId: getElement
      parameters:
      - name: restaurant
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderElementGet'
    delete:
      tags:
      - order-element-controller
      operationId: deleteElement
      parameters:
      - name: restaurant
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /api/multimedia/{restaurantRef}/{multimediaRef}:
    get:
      tags:
      - multimedia-controller
      operationId: getCategories
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: multimediaRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
  /api/menu/item/{restaurantRef}/{ref}:
    get:
      tags:
      - menu-item-controller
      operationId: getItemDetails
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemDetailedGet'
  /api/menu/item-group/{restaurantRef}/{ref}:
    get:
      tags:
      - menu-item-group-controller
      operationId: getItemGroupDetails
      parameters:
      - name: restaurantRef
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      - name: ref
        in: path
        required: true
        schema:
          pattern: "[0-9A-Za-z]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemGroupGet'
components:
  schemas:
    RestaurantTableData:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
    MultimediaGet:
      required:
      - ref
      type: object
      properties:
        ref:
          type: string
    QrCodeGet:
      required:
      - ref
      - status
      - style
      type: object
      properties:
        ref:
          type: string
        image:
          $ref: '#/components/schemas/MultimediaGet'
        style:
          type: string
          enum:
          - RAW
        status:
          type: string
          enum:
          - PROCESSING
          - READY
          - FAILURE
    RestaurantTableGet:
      required:
      - name
      - qrCode
      - ref
      type: object
      properties:
        ref:
          type: string
        name:
          type: string
        qrCode:
          $ref: '#/components/schemas/QrCodeGet'
    IdentifiedByRefData:
      required:
      - ref
      type: object
      properties:
        ref:
          pattern: "[0-9A-Za-z]{12}"
          type: string
    OpeningHoursUTCData:
      required:
      - dayOfWeek
      - openMinute
      - workForMinutes
      type: object
      properties:
        dayOfWeek:
          type: string
          enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
        openMinute:
          maximum: 1440
          minimum: 0
          type: integer
          format: int32
        workForMinutes:
          maximum: 1440
          minimum: 0
          type: integer
          format: int32
    RestaurantData:
      required:
      - callWaiter
      - currency
      - isOpen
      - name
      - onlinePayment
      - openingHoursUTC
      - postPayment
      - prePayment
      - qrCodeStyle
      - tipPayment
      type: object
      properties:
        name:
          type: string
        onlinePayment:
          type: boolean
        prePayment:
          type: boolean
        postPayment:
          type: boolean
        tipPayment:
          type: boolean
        callWaiter:
          type: boolean
        isOpen:
          type: boolean
        logo:
          $ref: '#/components/schemas/IdentifiedByRefData'
        currency:
          type: string
          enum:
          - PLN
          - EUR
          - USD
        qrCodeStyle:
          type: string
          enum:
          - RAW
        openingHoursUTC:
          type: array
          items:
            $ref: '#/components/schemas/OpeningHoursUTCData'
    OpeningHoursUTCGet:
      required:
      - dayOfWeek
      - openMinute
      - workForMinutes
      type: object
      properties:
        dayOfWeek:
          type: string
          enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
        openMinute:
          type: integer
          format: int32
        workForMinutes:
          type: integer
          format: int32
    RestaurantGet:
      required:
      - callWaiter
      - currency
      - isOpen
      - name
      - onlinePayment
      - openingHoursUTC
      - postPayment
      - prePayment
      - ref
      - tipPayment
      type: object
      properties:
        ref:
          type: string
        name:
          type: string
        onlinePayment:
          type: boolean
        prePayment:
          type: boolean
        postPayment:
          type: boolean
        tipPayment:
          type: boolean
        callWaiter:
          type: boolean
        isOpen:
          type: boolean
        logo:
          $ref: '#/components/schemas/MultimediaGet'
        currency:
          type: string
          enum:
          - PLN
          - EUR
          - USD
        openingHoursUTC:
          type: array
          items:
            $ref: '#/components/schemas/OpeningHoursUTCGet'
    OrderPutData:
      type: object
      properties:
        comment:
          maxLength: 2000
          minLength: 0
          type: string
    MenuItemGet:
      required:
      - active
      - available
      - elementOrder
      - menuItemGroup
      - name
      - price
      - ref
      type: object
      properties:
        menuItemGroup:
          type: string
        ref:
          type: string
        name:
          type: string
        price:
          type: number
        available:
          type: boolean
        active:
          type: boolean
        elementOrder:
          type: integer
          format: int32
    MenuItemSelectGet:
      required:
      - active
      - available
      - collection
      - elementOrder
      - name
      - price
      - ref
      type: object
      properties:
        collection:
          type: string
        ref:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        available:
          type: boolean
        active:
          type: boolean
        elementOrder:
          type: integer
          format: int32
    MenuItemToppingGet:
      required:
      - active
      - available
      - collection
      - elementOrder
      - name
      - price
      - ref
      type: object
      properties:
        collection:
          type: string
        ref:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        available:
          type: boolean
        active:
          type: boolean
        elementOrder:
          type: integer
          format: int32
    OrderDetailsGet:
      required:
      - ref
      type: object
      properties:
        ref:
          type: string
        comment:
          type: string
        orderStatus:
          type: string
          enum:
          - PLACED
          - EXPIRED
          - ABANDONED
          - REJECTED
          - ACCEPTED
          - CANCELED
          - SERVED
        paymentStatus:
          type: string
          enum:
          - UNPAID
          - PAID
          - RETURNED
          - WITHDRAWN
        orderElements:
          type: array
          items:
            $ref: '#/components/schemas/OrderElementGet'
        actionsAllowed:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - CREATE
            - EXPIRE
            - REJECT
            - ABANDON
            - ACCEPT
            - MODIFY
            - CANCEL
            - SERVE
            - DELETE
            - PAY
            - RETURN
            - WITHDRAW
    OrderElementGet:
      required:
      - menuItem
      - menuItemSelects
      - menuItemToppings
      - ref
      type: object
      properties:
        ref:
          type: string
        menuItem:
          $ref: '#/components/schemas/MenuItemGet'
        menuItemSelects:
          type: array
          items:
            $ref: '#/components/schemas/MenuItemSelectGet'
        menuItemToppings:
          type: array
          items:
            $ref: '#/components/schemas/MenuItemToppingGet'
    OrderElementData:
      required:
      - menuItem
      - menuItemSelects
      - menuItemToppings
      - orderInstance
      type: object
      properties:
        orderInstance:
          $ref: '#/components/schemas/IdentifiedByRefData'
        menuItem:
          $ref: '#/components/schemas/IdentifiedByRefData'
        menuItemSelects:
          type: array
          items:
            $ref: '#/components/schemas/IdentifiedByRefData'
        menuItemToppings:
          type: array
          items:
            $ref: '#/components/schemas/IdentifiedByRefData'
    MenuItemToppingData:
      required:
      - available
      - collection
      - elementOrder
      - name
      type: object
      properties:
        collection:
          $ref: '#/components/schemas/IdentifiedByRefData'
        name:
          maxLength: 255
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
        price:
          maximum: 10000
          type: number
        available:
          type: boolean
        elementOrder:
          type: integer
          format: int32
    MenuItemToppingCollectionData:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
    MenuItemToppingCollectionGet:
      required:
      - active
      - menuItemToppings
      - name
      - ref
      type: object
      properties:
        ref:
          type: string
        name:
          type: string
        description:
          type: string
        active:
          type: boolean
        menuItemToppings:
          type: array
          items:
            $ref: '#/components/schemas/MenuItemToppingGet'
    MenuItemSelectData:
      required:
      - available
      - collection
      - elementOrder
      - name
      type: object
      properties:
        collection:
          $ref: '#/components/schemas/IdentifiedByRefData'
        name:
          maxLength: 255
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
        price:
          maximum: 10000
          type: number
        available:
          type: boolean
        elementOrder:
          type: integer
          format: int32
    MenuItemSelectCollectionData:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
    MenuItemSelectCollectionGet:
      required:
      - menuItemSelects
      - name
      - ref
      type: object
      properties:
        ref:
          type: string
        name:
          type: string
        active:
          type: boolean
        description:
          type: string
        menuItemSelects:
          type: array
          items:
            $ref: '#/components/schemas/MenuItemSelectGet'
    MenuItemData:
      required:
      - available
      - elementOrder
      - menuItemGroup
      - name
      - selectCollections
      - toppingCollections
      type: object
      properties:
        menuItemGroup:
          $ref: '#/components/schemas/IdentifiedByRefData'
        name:
          maxLength: 255
          minLength: 0
          type: string
        price:
          maximum: 10000
          type: number
        available:
          type: boolean
        elementOrder:
          type: integer
          format: int32
        toppingCollections:
          type: array
          items:
            $ref: '#/components/schemas/IdentifiedByRefData'
        selectCollections:
          type: array
          items:
            $ref: '#/components/schemas/IdentifiedByRefData'
    MenuItemDetailedGet:
      required:
      - active
      - available
      - elementOrder
      - menuItemGroup
      - menuItemGroupDescription
      - menuItemGroupName
      - name
      - price
      - ref
      - selectCollections
      - toppingCollections
      type: object
      properties:
        menuItemGroup:
          type: string
        menuItemGroupName:
          type: string
        menuItemGroupDescription:
          type: string
        ref:
          type: string
        name:
          type: string
        price:
          type: number
        available:
          type: boolean
        active:
          type: boolean
        elementOrder:
          type: integer
          format: int32
        toppingCollections:
          type: array
          items:
            $ref: '#/components/schemas/MenuItemToppingCollectionGet'
        selectCollections:
          type: array
          items:
            $ref: '#/components/schemas/MenuItemSelectCollectionGet'
    MenuItemGroupData:
      required:
      - available
      - category
      - elementOrder
      - name
      type: object
      properties:
        category:
          $ref: '#/components/schemas/IdentifiedByRefData'
        name:
          maxLength: 255
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
        available:
          type: boolean
        image:
          $ref: '#/components/schemas/IdentifiedByRefData'
        elementOrder:
          type: integer
          format: int32
    MenuItemGroupGet:
      required:
      - active
      - available
      - category
      - elementOrder
      - menuItems
      - name
      - ref
      - relationType
      type: object
      properties:
        category:
          type: string
        ref:
          type: string
        name:
          type: string
        available:
          type: boolean
        active:
          type: boolean
        image:
          $ref: '#/components/schemas/MultimediaGet'
        description:
          type: string
        elementOrder:
          type: integer
          format: int32
        relationType:
          type: string
          enum:
          - DIRECT
          - SELECT_BY_NAME
        menuItems:
          type: array
          items:
            $ref: '#/components/schemas/MenuItemGet'
    MenuCategoryData:
      required:
      - elementOrder
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
        icon:
          $ref: '#/components/schemas/IdentifiedByRefData'
        elementOrder:
          type: integer
          format: int32
    MenuCategoryGet:
      required:
      - elementOrder
      - menuItemGroups
      - name
      - ref
      type: object
      properties:
        ref:
          type: string
        name:
          type: string
        elementOrder:
          type: integer
          format: int32
        description:
          type: string
        icon:
          $ref: '#/components/schemas/MultimediaGet'
        menuItemGroups:
          type: array
          items:
            $ref: '#/components/schemas/MenuItemGroupGet'
    OrderData:
      required:
      - items
      type: object
      properties:
        comment:
          maxLength: 2000
          minLength: 0
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderDataElementData'
    OrderDataElementData:
      required:
      - menuItem
      type: object
      properties:
        menuItem:
          $ref: '#/components/schemas/IdentifiedByRefData'
        menuItemSelects:
          type: array
          items:
            $ref: '#/components/schemas/IdentifiedByRefData'
        menuItemToppings:
          type: array
          items:
            $ref: '#/components/schemas/IdentifiedByRefData'
    StatusResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
    OrderGet:
      required:
      - actionsAllowed
      - orderStatus
      - paymentStatus
      - ref
      type: object
      properties:
        ref:
          type: string
        comment:
          type: string
        orderStatus:
          type: string
          enum:
          - PLACED
          - EXPIRED
          - ABANDONED
          - REJECTED
          - ACCEPTED
          - CANCELED
          - SERVED
        paymentStatus:
          type: string
          enum:
          - UNPAID
          - PAID
          - RETURNED
          - WITHDRAWN
        actionsAllowed:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - CREATE
            - EXPIRE
            - REJECT
            - ABANDON
            - ACCEPT
            - MODIFY
            - CANCEL
            - SERVE
            - DELETE
            - PAY
            - RETURN
            - WITHDRAW
    SubscribeOrdersMessage:
      required:
      - batchType
      - orders
      type: object
      properties:
        batchType:
          type: string
          enum:
          - LOAD
          - CREATE
          - UPDATE
          - DELETE
        orders:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/OrderGet'
